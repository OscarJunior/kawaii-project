Ejercicio 1
Ahora mismo, los kawaii son felices únicamente si están en la columna inicial,
el primer ejercicio es implementar el switch make kawaiis happy, es decir,
aunque los ítems de la columnas se hayan modificado, restauren su posición inicial,
y todos sean felices

Ejercicio 2
Con ayuda del localStorage del navegador,
permitir al usuario que su configuración de kawaiis se mantenga la próxima vez que entre a la app

Ejercicio 3
En las columnas de kawaiis,
cuando cambiamos uno de los kawaiis por un tipo primitivo distinto,
nos llevará a la pantalla de error oh-no, por ejemplo colocando un 1 en lugar de una función kawaii.
Cuando esto suceda necesitamos también informar de lo ocurrido, en Formarketer usamos sentry para lograrlo,
en este ejercicio, tenemos que configurar la app para que sea capaz de enviar datos a sentry


Docs - JavaScript
Ejercicio 4
Usar un kawaii componente para personalizar el “no data” por defecto de antd,
y personalizar otro cuando la llamada a la Api de GitHub devuelva una lista vacía

Ejercicio 5
Llamar a la API pública de GitHub para obtener los commits que se realizaron para cada uno de los repositorios

https://developer.github.com/v3/repos/commits/

Ejercicio 6
Personalizar un loading a través de nuestros componentes kawaiis, este componente deberá aparecer en cada llamada a la Api de GitHub

Ejercicio 7
Implementar el envío de notificaciones a través de antd para proporcionar feedback al usuario de las principales acciones que esta realizando

Error en llamada Axios
Cambio de estado de un Kawaii, en las acciones del DragAndDrop